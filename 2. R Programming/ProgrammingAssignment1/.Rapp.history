seq(along.with=my_seq)
seq_along(my_seq)
rep(0,40)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
num_vect<-c(0.5,55,-10,6)
tf<-num_vect<1
tf
num_vect>=6
my_char <- "My","name","is"
my_char <- c("My","name","is")
my_char
paste(my_char, collapse=" ")
my_name=c(my_char, "Ameya")
my_name
paste(my_name, collapse=" ")
paste("Hello","world!",sep =" ")
paste(1:3,c("X", "Y", "Z"),sep="")
paste(LETTERS, 1:4, sep = "-")
swirl()
x<-c(44,NA,5,NA)
x*3
y<-rnorm(1000)
z<-rep(NA,1000)
my_data<-sample(c(y,z),100)
my_na<-is.na(my_data)
my_na
my_data==NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
x[!is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x)&x>0]
c(x[3],x[5], x[7])
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2<-c(11,2,NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix
matrix(1:20,4,5)
my_matrix2<-matrix(1:20,4,5)
identical(my_matrix,my_matrix2)
patients<-c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames<-c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data,cnames)
play()
?colnames
colnames(my_data)<-cnames
nxt()
colnames(x)<-cnames
cnames<-c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data)<-cnames
my_data
x<-c(1,3,5)
y<-(3,2,10)
y<-c(3,2,10)
rbind(x,y)
x <- list(2, "a", "b", TRUE)
x[[1]]
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x>10]<-4
ls9
ls()
rem(list(ls()))
ls()
read.csv("/Users/Ameya/Downloads/hw1_data.csv")
a<-read.csv("/Users/Ameya/Downloads/hw1_data.csv")
a[1:2,]
a[152:,]
a[152:153,]
a[47,"Ozone"]
sum(is.na(a[,"Ozone"]))
mean(a[!is.na(a)])
mean(a[!is.na(a[,"Ozone"])])
mean(a[!is.na(a[,"Ozone"]))
mean(a[!is.na(a[,"Ozone"])])
mean(a)
a[[!is.na(a[,"Ozone"])]]
mean(a[,!is.na(a[,"Ozone"])])
mean(a[,[!is.na(a[,"Ozone"])]])
b<-a[,[!is.na(a[,"Ozone"])]]
b<-is.na(a[,"Ozone"])
a[!b]
a[,!b]
a[[,!b]]
a[[!b,"Ozone"]]
a[!b,"Ozone"]
mean(a[!b,"Ozone"])
c<-[c(a[,"Ozone">31],a[,"Temp">90],]
c<-a[,"Ozone">31]
c
c<-a[[,"Ozone">31]]
good <- complete.cases(a$Ozone, a$Solar.R, a$Temp)
mean(a$Solar.R[good & a$Ozone > 31 & a$Temp > 90])
?matrix
swirl()
library(swirl)
swirl()
T==T
TRUE==TRUE
(FALSE==TRUE)==TRUE
(FALSE==TRUE)==FALSE
6==7
6<7
10<=10
5!=7
!(5=7)
!(5==7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5>8||6!=8& 4>3.9
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>$4)
isTRUE(6>4)
identical('twins','twins')
xor(5==6, !FALSE)
ints<-sample(10)
ints
ints>5
which(ints>7)
any(ints<0)
all(ints>0)
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4, 5, 10))
submit()
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5).
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(std, c(1.4,3.6,7.9,8.8))
evaluate(mean, c(1.4,3.6,7.9,8.8))
evaluate(sd, c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[end]},c(8,4,0))
evaluate(function(x){x[3]},c(8,4,0))
evaluate(function(x){x[length(x)]},c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram(yell)
telegram("yell")
submit()
mad_libs(pune,cool,duck)
mad_libs("pune","cool","duck")
submit()
'I'%p%'love'%p%'R'
'I'%p%'love'%p%'R!'
library(swirl)
swirl()
d1<-Sys.Date()
class(d1)
unclass(d1)
d1
d2<-as.Date("1969-01-01")
unclass(d2)
Sys.time()
t1<-Sys.time()
t1
class(t1)
unclass(t1)
t2<-as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
month(t1)
months(t1)
quarters(t2)
t3<-strptime("October 17, 1986 08:24")
t3<-strptime("October 17, 1986 08:24", format=YYYY-MM-DD)
t3<-"October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
t4<-strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time()>t1
Sys.time()-t1
difftime(Sys.time(), t1, units = 'days')
f <- function(x) {#
        g <- function(y) {#
                y + z#
        }#
        z <- 4#
        x + g(x)#
}
z <- 10
f(3)
x <- 1:10#
if(x > 5) {#
        x <- 0#
}
x <- 5#
y <- if(x < 3) {#
        NA#
} else {#
        10#
}
y
setwd("Users/Ameya/R/P1")
source("/Users/Ameya/R/P1/pollutantmean.R")
ls
ls()
source("/Users/Ameya/R/P1/pollutantmean.R")
source("/Users/Ameya/R/P1/pollutantmean.R")
source("/Users/Ameya/R/P1/complete.R")
source("/Users/Ameya/R/P1/corr.R")
pollutantmean("specdata", "sulfate", 1:10)
setwd("/Users/Ameya/R/P1")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))#
print(cc$nobs)
cc <- complete("specdata", 54)#
print(cc$nobs)
set.seed(42)#
cc <- complete("specdata", 332:1)#
use <- sample(332, 10)#
print(cc[use, "nobs"])
cr <- corr("specdata")                #
cr <- sort(cr)                #
set.seed(868)                #
out <- round(cr[sample(length(cr), 5)], 4)#
print(out)
cr <- corr("specdata", 129)                #
cr <- sort(cr)                #
n <- length(cr)                #
set.seed(197)                #
out <- c(n, round(cr[sample(n, 5)], 4))#
print(out)
cr <- corr("specdata", 2000)                #
n <- length(cr)                #
cr <- corr("specdata", 1000)                #
cr <- sort(cr)#
print(c(n, round(cr, 4)))
